Index.PACKAGES = {"com.github.dmarcous.s2utils.s2" : [{"name" : "com.github.dmarcous.s2utils.s2.S2Utilities", "shortDescription" : "Enclosing objects for com.github.dmarcous.s2utils.s2.S2Utilitiesmethods for handling S2Cells and related S2 family objects", "object" : "com\/github\/dmarcous\/s2utils\/s2\/S2Utilities$.html", "members_object" : [{"label" : "getCellParent", "tail" : "(cellToken: String): String", "member" : "com.github.dmarcous.s2utils.s2.S2Utilities.getCellParent", "link" : "com\/github\/dmarcous\/s2utils\/s2\/S2Utilities$.html#getCellParent(cellToken:String):String", "kind" : "def"}, {"label" : "getCellParent", "tail" : "(cellToken: String, level: Int): String", "member" : "com.github.dmarcous.s2utils.s2.S2Utilities.getCellParent", "link" : "com\/github\/dmarcous\/s2utils\/s2\/S2Utilities$.html#getCellParent(cellToken:String,level:Int):String", "kind" : "def"}, {"label" : "getCellParent", "tail" : "(cell: S2Cell): S2Cell", "member" : "com.github.dmarcous.s2utils.s2.S2Utilities.getCellParent", "link" : "com\/github\/dmarcous\/s2utils\/s2\/S2Utilities$.html#getCellParent(cell:com.google.common.geometry.S2Cell):com.google.common.geometry.S2Cell", "kind" : "def"}, {"label" : "getCellParent", "tail" : "(cell: S2Cell, level: Int): S2Cell", "member" : "com.github.dmarcous.s2utils.s2.S2Utilities.getCellParent", "link" : "com\/github\/dmarcous\/s2utils\/s2\/S2Utilities$.html#getCellParent(cell:com.google.common.geometry.S2Cell,level:Int):com.google.common.geometry.S2Cell", "kind" : "def"}, {"label" : "getCellParent", "tail" : "(cellId: S2CellId): S2CellId", "member" : "com.github.dmarcous.s2utils.s2.S2Utilities.getCellParent", "link" : "com\/github\/dmarcous\/s2utils\/s2\/S2Utilities$.html#getCellParent(cellId:com.google.common.geometry.S2CellId):com.google.common.geometry.S2CellId", "kind" : "def"}, {"label" : "getCellParent", "tail" : "(cellId: S2CellId, level: Int): S2CellId", "member" : "com.github.dmarcous.s2utils.s2.S2Utilities.getCellParent", "link" : "com\/github\/dmarcous\/s2utils\/s2\/S2Utilities$.html#getCellParent(cellId:com.google.common.geometry.S2CellId,level:Int):com.google.common.geometry.S2CellId", "kind" : "def"}, {"label" : "getAllCellNeighboursTokens", "tail" : "(cellToken: String): List[String]", "member" : "com.github.dmarcous.s2utils.s2.S2Utilities.getAllCellNeighboursTokens", "link" : "com\/github\/dmarcous\/s2utils\/s2\/S2Utilities$.html#getAllCellNeighboursTokens(cellToken:String):List[String]", "kind" : "def"}, {"label" : "getAllCellNeighboursTokens", "tail" : "(cell: S2Cell): List[String]", "member" : "com.github.dmarcous.s2utils.s2.S2Utilities.getAllCellNeighboursTokens", "link" : "com\/github\/dmarcous\/s2utils\/s2\/S2Utilities$.html#getAllCellNeighboursTokens(cell:com.google.common.geometry.S2Cell):List[String]", "kind" : "def"}, {"label" : "getAllCellNeighboursTokens", "tail" : "(cellId: S2CellId): List[String]", "member" : "com.github.dmarcous.s2utils.s2.S2Utilities.getAllCellNeighboursTokens", "link" : "com\/github\/dmarcous\/s2utils\/s2\/S2Utilities$.html#getAllCellNeighboursTokens(cellId:com.google.common.geometry.S2CellId):List[String]", "kind" : "def"}, {"label" : "getAllCellNeighbours", "tail" : "(cellToken: String): List[S2CellId]", "member" : "com.github.dmarcous.s2utils.s2.S2Utilities.getAllCellNeighbours", "link" : "com\/github\/dmarcous\/s2utils\/s2\/S2Utilities$.html#getAllCellNeighbours(cellToken:String):List[com.google.common.geometry.S2CellId]", "kind" : "def"}, {"label" : "getAllCellNeighbours", "tail" : "(cell: S2Cell): List[S2CellId]", "member" : "com.github.dmarcous.s2utils.s2.S2Utilities.getAllCellNeighbours", "link" : "com\/github\/dmarcous\/s2utils\/s2\/S2Utilities$.html#getAllCellNeighbours(cell:com.google.common.geometry.S2Cell):List[com.google.common.geometry.S2CellId]", "kind" : "def"}, {"label" : "getAllCellNeighbours", "tail" : "(cellId: S2CellId): List[S2CellId]", "member" : "com.github.dmarcous.s2utils.s2.S2Utilities.getAllCellNeighbours", "link" : "com\/github\/dmarcous\/s2utils\/s2\/S2Utilities$.html#getAllCellNeighbours(cellId:com.google.common.geometry.S2CellId):List[com.google.common.geometry.S2CellId]", "kind" : "def"}, {"label" : "getLevelForArea", "tail" : "(metricArea: Double): Int", "member" : "com.github.dmarcous.s2utils.s2.S2Utilities.getLevelForArea", "link" : "com\/github\/dmarcous\/s2utils\/s2\/S2Utilities$.html#getLevelForArea(metricArea:Double):Int", "kind" : "def"}, {"label" : "getCellCenter", "tail" : "(cellToken: String): (Double, Double)", "member" : "com.github.dmarcous.s2utils.s2.S2Utilities.getCellCenter", "link" : "com\/github\/dmarcous\/s2utils\/s2\/S2Utilities$.html#getCellCenter(cellToken:String):(Double,Double)", "kind" : "def"}, {"label" : "getCellCenter", "tail" : "(cell: S2Cell): (Double, Double)", "member" : "com.github.dmarcous.s2utils.s2.S2Utilities.getCellCenter", "link" : "com\/github\/dmarcous\/s2utils\/s2\/S2Utilities$.html#getCellCenter(cell:com.google.common.geometry.S2Cell):(Double,Double)", "kind" : "def"}, {"label" : "getCellCenter", "tail" : "(cellId: S2CellId): (Double, Double)", "member" : "com.github.dmarcous.s2utils.s2.S2Utilities.getCellCenter", "link" : "com\/github\/dmarcous\/s2utils\/s2\/S2Utilities$.html#getCellCenter(cellId:com.google.common.geometry.S2CellId):(Double,Double)", "kind" : "def"}, {"label" : "getS2CellFromFullToken", "tail" : "(cellToken: String): S2Cell", "member" : "com.github.dmarcous.s2utils.s2.S2Utilities.getS2CellFromFullToken", "link" : "com\/github\/dmarcous\/s2utils\/s2\/S2Utilities$.html#getS2CellFromFullToken(cellToken:String):com.google.common.geometry.S2Cell", "kind" : "def"}, {"label" : "getS2CellIdFromFullToken", "tail" : "(cellToken: String): S2CellId", "member" : "com.github.dmarcous.s2utils.s2.S2Utilities.getS2CellIdFromFullToken", "link" : "com\/github\/dmarcous\/s2utils\/s2\/S2Utilities$.html#getS2CellIdFromFullToken(cellToken:String):com.google.common.geometry.S2CellId", "kind" : "def"}, {"label" : "getS2CellFullToken", "tail" : "(cell: S2Cell): String", "member" : "com.github.dmarcous.s2utils.s2.S2Utilities.getS2CellFullToken", "link" : "com\/github\/dmarcous\/s2utils\/s2\/S2Utilities$.html#getS2CellFullToken(cell:com.google.common.geometry.S2Cell):String", "kind" : "def"}, {"label" : "getS2CellFullToken", "tail" : "(cellId: S2CellId): String", "member" : "com.github.dmarcous.s2utils.s2.S2Utilities.getS2CellFullToken", "link" : "com\/github\/dmarcous\/s2utils\/s2\/S2Utilities$.html#getS2CellFullToken(cellId:com.google.common.geometry.S2CellId):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/dmarcous\/s2utils\/s2\/S2Utilities$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/dmarcous\/s2utils\/s2\/S2Utilities$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/dmarcous\/s2utils\/s2\/S2Utilities$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/dmarcous\/s2utils\/s2\/S2Utilities$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/dmarcous\/s2utils\/s2\/S2Utilities$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/dmarcous\/s2utils\/s2\/S2Utilities$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/dmarcous\/s2utils\/s2\/S2Utilities$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/dmarcous\/s2utils\/s2\/S2Utilities$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/dmarcous\/s2utils\/s2\/S2Utilities$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/dmarcous\/s2utils\/s2\/S2Utilities$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/dmarcous\/s2utils\/s2\/S2Utilities$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/dmarcous\/s2utils\/s2\/S2Utilities$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/dmarcous\/s2utils\/s2\/S2Utilities$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/dmarcous\/s2utils\/s2\/S2Utilities$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/dmarcous\/s2utils\/s2\/S2Utilities$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/dmarcous\/s2utils\/s2\/S2Utilities$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/dmarcous\/s2utils\/s2\/S2Utilities$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/dmarcous\/s2utils\/s2\/S2Utilities$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/dmarcous\/s2utils\/s2\/S2Utilities$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "com.github.dmarcous.s2utils.geo" : [{"name" : "com.github.dmarcous.s2utils.geo.GeographyUtilities", "shortDescription" : "Enclosing objects for com.github.dmarcous.s2utils.geo.GeographyUtilitiesmethods for handling jts Geometry objects.", "object" : "com\/github\/dmarcous\/s2utils\/geo\/GeographyUtilities$.html", "members_object" : [{"label" : "mergeCoordinates", "tail" : "(coordinates: Array[(Double, Double)], gf: GeometryFactory, metersTolerance: Double): Geometry", "member" : "com.github.dmarcous.s2utils.geo.GeographyUtilities.mergeCoordinates", "link" : "com\/github\/dmarcous\/s2utils\/geo\/GeographyUtilities$.html#mergeCoordinates(coordinates:Array[(Double,Double)],gf:com.vividsolutions.jts.geom.GeometryFactory,metersTolerance:Double):com.vividsolutions.jts.geom.Geometry", "kind" : "def"}, {"label" : "mergeCoordinates", "tail" : "(coordinates: Array[Point], gf: GeometryFactory, metersTolerance: Double): Geometry", "member" : "com.github.dmarcous.s2utils.geo.GeographyUtilities.mergeCoordinates", "link" : "com\/github\/dmarcous\/s2utils\/geo\/GeographyUtilities$.html#mergeCoordinates(coordinates:Array[com.vividsolutions.jts.geom.Point],gf:com.vividsolutions.jts.geom.GeometryFactory,metersTolerance:Double):com.vividsolutions.jts.geom.Geometry", "kind" : "def"}, {"label" : "mergeCoordinates", "tail" : "(coordinates: Array[Coordinate], gf: GeometryFactory, metersTolerance: Double): Geometry", "member" : "com.github.dmarcous.s2utils.geo.GeographyUtilities.mergeCoordinates", "link" : "com\/github\/dmarcous\/s2utils\/geo\/GeographyUtilities$.html#mergeCoordinates(coordinates:Array[com.vividsolutions.jts.geom.Coordinate],gf:com.vividsolutions.jts.geom.GeometryFactory,metersTolerance:Double):com.vividsolutions.jts.geom.Geometry", "kind" : "def"}, {"label" : "boxSimplifyGeometry", "tail" : "(geometry: Geometry, metersTolerance: Double): Geometry", "member" : "com.github.dmarcous.s2utils.geo.GeographyUtilities.boxSimplifyGeometry", "link" : "com\/github\/dmarcous\/s2utils\/geo\/GeographyUtilities$.html#boxSimplifyGeometry(geometry:com.vividsolutions.jts.geom.Geometry,metersTolerance:Double):com.vividsolutions.jts.geom.Geometry", "kind" : "def"}, {"label" : "simplifyGeometry", "tail" : "(geometry: Geometry, metersTolerance: Double): Geometry", "member" : "com.github.dmarcous.s2utils.geo.GeographyUtilities.simplifyGeometry", "link" : "com\/github\/dmarcous\/s2utils\/geo\/GeographyUtilities$.html#simplifyGeometry(geometry:com.vividsolutions.jts.geom.Geometry,metersTolerance:Double):com.vividsolutions.jts.geom.Geometry", "kind" : "def"}, {"label" : "haversineDistance", "tail" : "(point1: Point, point2: Point): Double", "member" : "com.github.dmarcous.s2utils.geo.GeographyUtilities.haversineDistance", "link" : "com\/github\/dmarcous\/s2utils\/geo\/GeographyUtilities$.html#haversineDistance(point1:com.vividsolutions.jts.geom.Point,point2:com.vividsolutions.jts.geom.Point):Double", "kind" : "def"}, {"label" : "haversineDistance", "tail" : "(coordinate1: Coordinate, coordinate2: Coordinate): Double", "member" : "com.github.dmarcous.s2utils.geo.GeographyUtilities.haversineDistance", "link" : "com\/github\/dmarcous\/s2utils\/geo\/GeographyUtilities$.html#haversineDistance(coordinate1:com.vividsolutions.jts.geom.Coordinate,coordinate2:com.vividsolutions.jts.geom.Coordinate):Double", "kind" : "def"}, {"label" : "haversineDistance", "tail" : "(lon1: Double, lat1: Double, lon2: Double, lat2: Double): Double", "member" : "com.github.dmarcous.s2utils.geo.GeographyUtilities.haversineDistance", "link" : "com\/github\/dmarcous\/s2utils\/geo\/GeographyUtilities$.html#haversineDistance(lon1:Double,lat1:Double,lon2:Double,lat2:Double):Double", "kind" : "def"}, {"label" : "geometryToWKB", "tail" : "(geometry: Geometry): Array[Byte]", "member" : "com.github.dmarcous.s2utils.geo.GeographyUtilities.geometryToWKB", "link" : "com\/github\/dmarcous\/s2utils\/geo\/GeographyUtilities$.html#geometryToWKB(geometry:com.vividsolutions.jts.geom.Geometry):Array[Byte]", "kind" : "def"}, {"label" : "geometryToWKT", "tail" : "(geometry: Geometry): String", "member" : "com.github.dmarcous.s2utils.geo.GeographyUtilities.geometryToWKT", "link" : "com\/github\/dmarcous\/s2utils\/geo\/GeographyUtilities$.html#geometryToWKT(geometry:com.vividsolutions.jts.geom.Geometry):String", "kind" : "def"}, {"label" : "WKBtoGeometry", "tail" : "(WKB: Array[Byte], gf: GeometryFactory): Geometry", "member" : "com.github.dmarcous.s2utils.geo.GeographyUtilities.WKBtoGeometry", "link" : "com\/github\/dmarcous\/s2utils\/geo\/GeographyUtilities$.html#WKBtoGeometry(WKB:Array[Byte],gf:com.vividsolutions.jts.geom.GeometryFactory):com.vividsolutions.jts.geom.Geometry", "kind" : "def"}, {"label" : "WKTtoGeometry", "tail" : "(WKT: String, gf: GeometryFactory): Geometry", "member" : "com.github.dmarcous.s2utils.geo.GeographyUtilities.WKTtoGeometry", "link" : "com\/github\/dmarcous\/s2utils\/geo\/GeographyUtilities$.html#WKTtoGeometry(WKT:String,gf:com.vividsolutions.jts.geom.GeometryFactory):com.vividsolutions.jts.geom.Geometry", "kind" : "def"}, {"label" : "createGeometryFactory", "tail" : "(): GeometryFactory", "member" : "com.github.dmarcous.s2utils.geo.GeographyUtilities.createGeometryFactory", "link" : "com\/github\/dmarcous\/s2utils\/geo\/GeographyUtilities$.html#createGeometryFactory():com.vividsolutions.jts.geom.GeometryFactory", "kind" : "def"}, {"label" : "SRID", "tail" : ": Int", "member" : "com.github.dmarcous.s2utils.geo.GeographyUtilities.SRID", "link" : "com\/github\/dmarcous\/s2utils\/geo\/GeographyUtilities$.html#SRID:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/dmarcous\/s2utils\/geo\/GeographyUtilities$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/dmarcous\/s2utils\/geo\/GeographyUtilities$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/dmarcous\/s2utils\/geo\/GeographyUtilities$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/dmarcous\/s2utils\/geo\/GeographyUtilities$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/dmarcous\/s2utils\/geo\/GeographyUtilities$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/dmarcous\/s2utils\/geo\/GeographyUtilities$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/dmarcous\/s2utils\/geo\/GeographyUtilities$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/dmarcous\/s2utils\/geo\/GeographyUtilities$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/dmarcous\/s2utils\/geo\/GeographyUtilities$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/dmarcous\/s2utils\/geo\/GeographyUtilities$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/dmarcous\/s2utils\/geo\/GeographyUtilities$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/dmarcous\/s2utils\/geo\/GeographyUtilities$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/dmarcous\/s2utils\/geo\/GeographyUtilities$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/dmarcous\/s2utils\/geo\/GeographyUtilities$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/dmarcous\/s2utils\/geo\/GeographyUtilities$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/dmarcous\/s2utils\/geo\/GeographyUtilities$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/dmarcous\/s2utils\/geo\/GeographyUtilities$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/dmarcous\/s2utils\/geo\/GeographyUtilities$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/dmarcous\/s2utils\/geo\/GeographyUtilities$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "com.github.dmarcous" : [], "com.github.dmarcous.s2utils" : [], "com" : [], "com.github.dmarcous.s2utils.converters" : [{"name" : "com.github.dmarcous.s2utils.converters.CoordinateConverters", "shortDescription" : "Enclosing objects for com.github.dmarcous.s2utils.converters.CoordinateConvertersmethods for converting coordinate objects.", "object" : "com\/github\/dmarcous\/s2utils\/converters\/CoordinateConverters$.html", "members_object" : [{"label" : "pointToS2CellFullToken", "tail" : "(point: Point, lvl: Int): String", "member" : "com.github.dmarcous.s2utils.converters.CoordinateConverters.pointToS2CellFullToken", "link" : "com\/github\/dmarcous\/s2utils\/converters\/CoordinateConverters$.html#pointToS2CellFullToken(point:com.vividsolutions.jts.geom.Point,lvl:Int):String", "kind" : "def"}, {"label" : "coordinateToS2CellFullToken", "tail" : "(coordinate: Coordinate, lvl: Int): String", "member" : "com.github.dmarcous.s2utils.converters.CoordinateConverters.coordinateToS2CellFullToken", "link" : "com\/github\/dmarcous\/s2utils\/converters\/CoordinateConverters$.html#coordinateToS2CellFullToken(coordinate:com.vividsolutions.jts.geom.Coordinate,lvl:Int):String", "kind" : "def"}, {"label" : "lonLatToS2CellFullToken", "tail" : "(lon: Double, lat: Double, lvl: Int): String", "member" : "com.github.dmarcous.s2utils.converters.CoordinateConverters.lonLatToS2CellFullToken", "link" : "com\/github\/dmarcous\/s2utils\/converters\/CoordinateConverters$.html#lonLatToS2CellFullToken(lon:Double,lat:Double,lvl:Int):String", "kind" : "def"}, {"label" : "pointToS2Cell", "tail" : "(point: Point, lvl: Int): S2Cell", "member" : "com.github.dmarcous.s2utils.converters.CoordinateConverters.pointToS2Cell", "link" : "com\/github\/dmarcous\/s2utils\/converters\/CoordinateConverters$.html#pointToS2Cell(point:com.vividsolutions.jts.geom.Point,lvl:Int):com.google.common.geometry.S2Cell", "kind" : "def"}, {"label" : "coordinateToS2Cell", "tail" : "(coordinate: Coordinate, lvl: Int): S2Cell", "member" : "com.github.dmarcous.s2utils.converters.CoordinateConverters.coordinateToS2Cell", "link" : "com\/github\/dmarcous\/s2utils\/converters\/CoordinateConverters$.html#coordinateToS2Cell(coordinate:com.vividsolutions.jts.geom.Coordinate,lvl:Int):com.google.common.geometry.S2Cell", "kind" : "def"}, {"label" : "lonLatToS2Cell", "tail" : "(lon: Double, lat: Double, lvl: Int): S2Cell", "member" : "com.github.dmarcous.s2utils.converters.CoordinateConverters.lonLatToS2Cell", "link" : "com\/github\/dmarcous\/s2utils\/converters\/CoordinateConverters$.html#lonLatToS2Cell(lon:Double,lat:Double,lvl:Int):com.google.common.geometry.S2Cell", "kind" : "def"}, {"label" : "pointToS2CellID", "tail" : "(point: Point, lvl: Int): S2CellId", "member" : "com.github.dmarcous.s2utils.converters.CoordinateConverters.pointToS2CellID", "link" : "com\/github\/dmarcous\/s2utils\/converters\/CoordinateConverters$.html#pointToS2CellID(point:com.vividsolutions.jts.geom.Point,lvl:Int):com.google.common.geometry.S2CellId", "kind" : "def"}, {"label" : "coordinateToS2CellID", "tail" : "(coordinate: Coordinate, lvl: Int): S2CellId", "member" : "com.github.dmarcous.s2utils.converters.CoordinateConverters.coordinateToS2CellID", "link" : "com\/github\/dmarcous\/s2utils\/converters\/CoordinateConverters$.html#coordinateToS2CellID(coordinate:com.vividsolutions.jts.geom.Coordinate,lvl:Int):com.google.common.geometry.S2CellId", "kind" : "def"}, {"label" : "lonLatToS2CellID", "tail" : "(lon: Double, lat: Double, lvl: Int): S2CellId", "member" : "com.github.dmarcous.s2utils.converters.CoordinateConverters.lonLatToS2CellID", "link" : "com\/github\/dmarcous\/s2utils\/converters\/CoordinateConverters$.html#lonLatToS2CellID(lon:Double,lat:Double,lvl:Int):com.google.common.geometry.S2CellId", "kind" : "def"}, {"label" : "adjusted3dCartesianCoordinatesTo2dRadianCoordinates", "tail" : "(cartesianCoordinates: (Double, Double, Double)): (Double, Double)", "member" : "com.github.dmarcous.s2utils.converters.CoordinateConverters.adjusted3dCartesianCoordinatesTo2dRadianCoordinates", "link" : "com\/github\/dmarcous\/s2utils\/converters\/CoordinateConverters$.html#adjusted3dCartesianCoordinatesTo2dRadianCoordinates(cartesianCoordinates:(Double,Double,Double)):(Double,Double)", "kind" : "def"}, {"label" : "adjusted3dCartesianCoordinatesTo2dRadianCoordinates", "tail" : "(x: Double, y: Double, z: Double): (Double, Double)", "member" : "com.github.dmarcous.s2utils.converters.CoordinateConverters.adjusted3dCartesianCoordinatesTo2dRadianCoordinates", "link" : "com\/github\/dmarcous\/s2utils\/converters\/CoordinateConverters$.html#adjusted3dCartesianCoordinatesTo2dRadianCoordinates(x:Double,y:Double,z:Double):(Double,Double)", "kind" : "def"}, {"label" : "cartesianCoordinates2dTo3d", "tail" : "(cartesianCoordinates: (Double, Double)): (Double, Double, Double)", "member" : "com.github.dmarcous.s2utils.converters.CoordinateConverters.cartesianCoordinates2dTo3d", "link" : "com\/github\/dmarcous\/s2utils\/converters\/CoordinateConverters$.html#cartesianCoordinates2dTo3d(cartesianCoordinates:(Double,Double)):(Double,Double,Double)", "kind" : "def"}, {"label" : "cartesianCoordinates2dTo3d", "tail" : "(x: Double, y: Double): (Double, Double, Double)", "member" : "com.github.dmarcous.s2utils.converters.CoordinateConverters.cartesianCoordinates2dTo3d", "link" : "com\/github\/dmarcous\/s2utils\/converters\/CoordinateConverters$.html#cartesianCoordinates2dTo3d(x:Double,y:Double):(Double,Double,Double)", "kind" : "def"}, {"label" : "cartesianCoordinatesToPolarCoordinates", "tail" : "(cartesianCoordinates: (Double, Double, Double)): (Double, Double, Double)", "member" : "com.github.dmarcous.s2utils.converters.CoordinateConverters.cartesianCoordinatesToPolarCoordinates", "link" : "com\/github\/dmarcous\/s2utils\/converters\/CoordinateConverters$.html#cartesianCoordinatesToPolarCoordinates(cartesianCoordinates:(Double,Double,Double)):(Double,Double,Double)", "kind" : "def"}, {"label" : "cartesianCoordinatesToPolarCoordinates", "tail" : "(x: Double, y: Double, z: Double): (Double, Double, Double)", "member" : "com.github.dmarcous.s2utils.converters.CoordinateConverters.cartesianCoordinatesToPolarCoordinates", "link" : "com\/github\/dmarcous\/s2utils\/converters\/CoordinateConverters$.html#cartesianCoordinatesToPolarCoordinates(x:Double,y:Double,z:Double):(Double,Double,Double)", "kind" : "def"}, {"label" : "cartesianCoordinatesToRadianCoordinates", "tail" : "(cartesianCoordinates: (Double, Double, Double)): (Double, Double, Double)", "member" : "com.github.dmarcous.s2utils.converters.CoordinateConverters.cartesianCoordinatesToRadianCoordinates", "link" : "com\/github\/dmarcous\/s2utils\/converters\/CoordinateConverters$.html#cartesianCoordinatesToRadianCoordinates(cartesianCoordinates:(Double,Double,Double)):(Double,Double,Double)", "kind" : "def"}, {"label" : "cartesianCoordinatesToRadianCoordinates", "tail" : "(x: Double, y: Double, z: Double): (Double, Double, Double)", "member" : "com.github.dmarcous.s2utils.converters.CoordinateConverters.cartesianCoordinatesToRadianCoordinates", "link" : "com\/github\/dmarcous\/s2utils\/converters\/CoordinateConverters$.html#cartesianCoordinatesToRadianCoordinates(x:Double,y:Double,z:Double):(Double,Double,Double)", "kind" : "def"}, {"label" : "polarCoordinatesToCartesianCoordinates", "tail" : "(polarCoordinates: (Double, Double, Double)): (Double, Double, Double)", "member" : "com.github.dmarcous.s2utils.converters.CoordinateConverters.polarCoordinatesToCartesianCoordinates", "link" : "com\/github\/dmarcous\/s2utils\/converters\/CoordinateConverters$.html#polarCoordinatesToCartesianCoordinates(polarCoordinates:(Double,Double,Double)):(Double,Double,Double)", "kind" : "def"}, {"label" : "polarCoordinatesToCartesianCoordinates", "tail" : "(radius: Double, inclination: Double, azimuth: Double): (Double, Double, Double)", "member" : "com.github.dmarcous.s2utils.converters.CoordinateConverters.polarCoordinatesToCartesianCoordinates", "link" : "com\/github\/dmarcous\/s2utils\/converters\/CoordinateConverters$.html#polarCoordinatesToCartesianCoordinates(radius:Double,inclination:Double,azimuth:Double):(Double,Double,Double)", "kind" : "def"}, {"label" : "radianCoordinatesToCartesianCoordinates", "tail" : "(radianCoordinates: (Double, Double, Double)): (Double, Double, Double)", "member" : "com.github.dmarcous.s2utils.converters.CoordinateConverters.radianCoordinatesToCartesianCoordinates", "link" : "com\/github\/dmarcous\/s2utils\/converters\/CoordinateConverters$.html#radianCoordinatesToCartesianCoordinates(radianCoordinates:(Double,Double,Double)):(Double,Double,Double)", "kind" : "def"}, {"label" : "radianCoordinatesToCartesianCoordinates", "tail" : "(radius: Double, inclination: Double, azimuth: Double): (Double, Double, Double)", "member" : "com.github.dmarcous.s2utils.converters.CoordinateConverters.radianCoordinatesToCartesianCoordinates", "link" : "com\/github\/dmarcous\/s2utils\/converters\/CoordinateConverters$.html#radianCoordinatesToCartesianCoordinates(radius:Double,inclination:Double,azimuth:Double):(Double,Double,Double)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/dmarcous\/s2utils\/converters\/CoordinateConverters$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/dmarcous\/s2utils\/converters\/CoordinateConverters$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/dmarcous\/s2utils\/converters\/CoordinateConverters$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/dmarcous\/s2utils\/converters\/CoordinateConverters$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/dmarcous\/s2utils\/converters\/CoordinateConverters$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/dmarcous\/s2utils\/converters\/CoordinateConverters$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/dmarcous\/s2utils\/converters\/CoordinateConverters$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/dmarcous\/s2utils\/converters\/CoordinateConverters$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/dmarcous\/s2utils\/converters\/CoordinateConverters$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/dmarcous\/s2utils\/converters\/CoordinateConverters$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/dmarcous\/s2utils\/converters\/CoordinateConverters$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/dmarcous\/s2utils\/converters\/CoordinateConverters$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/dmarcous\/s2utils\/converters\/CoordinateConverters$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/dmarcous\/s2utils\/converters\/CoordinateConverters$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/dmarcous\/s2utils\/converters\/CoordinateConverters$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/dmarcous\/s2utils\/converters\/CoordinateConverters$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/dmarcous\/s2utils\/converters\/CoordinateConverters$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/dmarcous\/s2utils\/converters\/CoordinateConverters$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/dmarcous\/s2utils\/converters\/CoordinateConverters$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.dmarcous.s2utils.converters.UnitConverters", "shortDescription" : "Enclosing objects for com.github.dmarcous.s2utils.converters.UnitConvertersmethods for converting between units.", "object" : "com\/github\/dmarcous\/s2utils\/converters\/UnitConverters$.html", "members_object" : [{"label" : "unitSphereToMetricArea", "tail" : "(unitSphereArea: Double): Double", "member" : "com.github.dmarcous.s2utils.converters.UnitConverters.unitSphereToMetricArea", "link" : "com\/github\/dmarcous\/s2utils\/converters\/UnitConverters$.html#unitSphereToMetricArea(unitSphereArea:Double):Double", "kind" : "def"}, {"label" : "metricToUnitSphereArea", "tail" : "(metricArea: Double): Double", "member" : "com.github.dmarcous.s2utils.converters.UnitConverters.metricToUnitSphereArea", "link" : "com\/github\/dmarcous\/s2utils\/converters\/UnitConverters$.html#metricToUnitSphereArea(metricArea:Double):Double", "kind" : "def"}, {"label" : "angularToMetricDistance", "tail" : "(angular_dist: Double): Double", "member" : "com.github.dmarcous.s2utils.converters.UnitConverters.angularToMetricDistance", "link" : "com\/github\/dmarcous\/s2utils\/converters\/UnitConverters$.html#angularToMetricDistance(angular_dist:Double):Double", "kind" : "def"}, {"label" : "metricToAngularDistance", "tail" : "(meters_dist: Double): Double", "member" : "com.github.dmarcous.s2utils.converters.UnitConverters.metricToAngularDistance", "link" : "com\/github\/dmarcous\/s2utils\/converters\/UnitConverters$.html#metricToAngularDistance(meters_dist:Double):Double", "kind" : "def"}, {"label" : "radiansToDegrees", "tail" : "(radians: Double): Double", "member" : "com.github.dmarcous.s2utils.converters.UnitConverters.radiansToDegrees", "link" : "com\/github\/dmarcous\/s2utils\/converters\/UnitConverters$.html#radiansToDegrees(radians:Double):Double", "kind" : "def"}, {"label" : "degreesToRadians", "tail" : "(degrees: Double): Double", "member" : "com.github.dmarcous.s2utils.converters.UnitConverters.degreesToRadians", "link" : "com\/github\/dmarcous\/s2utils\/converters\/UnitConverters$.html#degreesToRadians(degrees:Double):Double", "kind" : "def"}, {"label" : "UNIT_SPHERE_AREA_TO_M_SQUARED_AREA_FACTOR", "tail" : ": Double", "member" : "com.github.dmarcous.s2utils.converters.UnitConverters.UNIT_SPHERE_AREA_TO_M_SQUARED_AREA_FACTOR", "link" : "com\/github\/dmarcous\/s2utils\/converters\/UnitConverters$.html#UNIT_SPHERE_AREA_TO_M_SQUARED_AREA_FACTOR:Double", "kind" : "val"}, {"label" : "M_SQUARED_LVL_0_AREA", "tail" : ": Double", "member" : "com.github.dmarcous.s2utils.converters.UnitConverters.M_SQUARED_LVL_0_AREA", "link" : "com\/github\/dmarcous\/s2utils\/converters\/UnitConverters$.html#M_SQUARED_LVL_0_AREA:Double", "kind" : "val"}, {"label" : "KM_SQUARED_LVL_0_AREA", "tail" : ": Double", "member" : "com.github.dmarcous.s2utils.converters.UnitConverters.KM_SQUARED_LVL_0_AREA", "link" : "com\/github\/dmarcous\/s2utils\/converters\/UnitConverters$.html#KM_SQUARED_LVL_0_AREA:Double", "kind" : "val"}, {"label" : "S2_LVL_0_AREA", "tail" : ": Double", "member" : "com.github.dmarcous.s2utils.converters.UnitConverters.S2_LVL_0_AREA", "link" : "com\/github\/dmarcous\/s2utils\/converters\/UnitConverters$.html#S2_LVL_0_AREA:Double", "kind" : "val"}, {"label" : "EARTH_RADIUS_METERS", "tail" : ": Int", "member" : "com.github.dmarcous.s2utils.converters.UnitConverters.EARTH_RADIUS_METERS", "link" : "com\/github\/dmarcous\/s2utils\/converters\/UnitConverters$.html#EARTH_RADIUS_METERS:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/dmarcous\/s2utils\/converters\/UnitConverters$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/dmarcous\/s2utils\/converters\/UnitConverters$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/dmarcous\/s2utils\/converters\/UnitConverters$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/dmarcous\/s2utils\/converters\/UnitConverters$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/dmarcous\/s2utils\/converters\/UnitConverters$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/dmarcous\/s2utils\/converters\/UnitConverters$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/dmarcous\/s2utils\/converters\/UnitConverters$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/dmarcous\/s2utils\/converters\/UnitConverters$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/dmarcous\/s2utils\/converters\/UnitConverters$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/dmarcous\/s2utils\/converters\/UnitConverters$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/dmarcous\/s2utils\/converters\/UnitConverters$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/dmarcous\/s2utils\/converters\/UnitConverters$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/dmarcous\/s2utils\/converters\/UnitConverters$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/dmarcous\/s2utils\/converters\/UnitConverters$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/dmarcous\/s2utils\/converters\/UnitConverters$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/dmarcous\/s2utils\/converters\/UnitConverters$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/dmarcous\/s2utils\/converters\/UnitConverters$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/dmarcous\/s2utils\/converters\/UnitConverters$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/dmarcous\/s2utils\/converters\/UnitConverters$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "com.github" : []};